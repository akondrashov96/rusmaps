#if coin is heads up add a common pattern to that row
if (coinFlip)
{
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0, 3), each = 5)
}
}
par(mar = rep(0.2, 4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
source('~/Documents/R/Coursepaper/Workings/Dimensio reduction.R')
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
source('~/Documents/R/Coursepaper/Workings/Dimensio reduction.R')
library(grDevices)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(seq(0, 1, len = 10))
##colorRampPalette
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y)
plot(x, y, col = rgb(0,0,0,0.2), pch = 19)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x, y, col = rgb(0,0,0,0.2), pch = 19)
x <- 1:400
y <- sin(x / 10) * exp(x * -0.01)
plot(x, y)
??regression
?regression
??plot
?plot
??plot
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("maptools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("tmap")
library("quantmod")
install.packages("quantmod")
library("dplyr") #manipulating data frames
library("xts") #working with time series
library("lpSolve") #solving linear programming
getSymbols(Symbols = c("AAPL", "MSFT", "GOOG"),
from = "2015-01-01", to = "2016-01-01")
library("quantmod") #Load data from Yahoo/google finance
library("dplyr") #manipulating data frames
library("xts") #working with time series
library("lpSolve") #solving linear programming
getSymbols(Symbols = c("AAPL", "MSFT", "GOOG"),
from = "2015-01-01", to = "2016-01-01")
head(AAPL)
head(MSFT)
head(GOOG)
all <- merge.xts(AAPL, MSFT, GOOG)
colnames(all)
all2 <- as.data.frame(all)
all3 <- seect(all2, ends_with("Adjusted"))
glimpse(all3)
all3 <- select(all2, ends_with("Adjusted"))
glimpse(all3)
all4 <- na.omit(all3)
glimpse(all4)
all4 <- na.omit(all3)
glimpse(all4)
all5 <- mutate(all4,
r_a = diff(log(AAPL.Adjusted)))
all1 <- diff(log(all))
all1 <- diff(log(all))
all2 <- as.data.frame(all)
all3 <- select(all2, ends_with("Adjusted"))
glimpse(all3)
all4 <- na.omit(all3)
glimpse(all4)
all5 <- mutate(all4,
r_a = diff(log(AAPL.Adjusted)))
v <- c(5,6,7)
mean(v)
mu <- apply(all4, MARGIN = 1, mean)
mu
T<-nrow(R)
T
MU <- matrix(rep(mu, T), nrow = T)
head(MU)
MU <- matrix(rep(mu, T), nrow = Tm byrow = TRUE)
head(MU)
MU <- matrix(rep(mu, T), nrow = T, byrow = TRUE)
head(MU)
mu <- apply(all4, MARGIN = 2, mean)
R <- all4
T<-nrow(R)
T
MU <- matrix(rep(mu, T), nrow = T, byrow = TRUE)
head(MU)
D <- R-MU
I <- diag(T)
II <- rbind(I, -I)
OII <- rbind(rep(0,T), I, -I)
OII
OII
EDO <- rbind(rep(1, K), D, D)
A <- cbind(EDO, OII)
lambda <- 10
coefs <- c(lambda * mu, rep(-1/T, T))
dirs<- c("=", rep(">", T), rep("<", T))
result$objective
result <- lp(direction = "max",
const.mat = A,
const.dir = dirs,
const.rhs = b,
objective.in <- coefs)
afms <- c("times.afm", "timesbd.afm", "timesi.afm", "timesbi.afm")
RUS <- Type1Font("TimesNewRomanPSMT-Regular", afms, "KOI8-R")
pdfFonts("EDM" = RUS)
pdf("russian.pdf")
plot(1, 1, family = "EDM", main = "Название")
warnings()
library(grid)
grid.text("надпись", gp = gpar(fontfamily = "EDM"))
dev.off()
embedFonts("russian.pdf", fontpaths = "/Users/Artem/Библиотеки/Fonts")
pdf("russian.pdf")
plot(1, 1, family = "EDM", main = "Название")
library(grid)
grid.text("надпись", gp = gpar(fontfamily = "EDM"))
dev.off()
embedFonts("russian.pdf", fontpaths = "/Users/Artem/Библиотеки/Fonts")
library("ggmap")
library("rgdal")
library("rgeos")
library("maptools")
library("dplyr")
library("tidyr")
library("tmap")
afms <- c("times.afm.gz", "timesbd.afm.gz", "timesi.afm.gz", "timesbi.afm.gz")
RUS <- Type1Font("TimesNewRomanPSMT-Regular", afms, "KOI8-R")
pdfFonts("EDM" = RUS)
pdf("russian.pdf")
plot(1, 1, family = "EDM", main = "Название")
library(grid)
grid.text("надпись", gp = gpar(fontfamily = "EDM"))
dev.off()
plot(1, 1, family = "EDM", main = "Название")
library(grid)
grid.text("надпись", gp = gpar(fontfamily = "EDM"))
install.packages("tikzDevice")
?tikzDevice
library("tikzDevice", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?tikzDevice
tikzUnicodeMetrixPackages = TRUE
tikzUnicodeMetrixPackages
library("extrafont")
font_import()
fonttable()
fonts()
pdf("sample.pdf",width = 6.6 ,height = 4.2,family= "URWHelvetica",  encoding="KOI8-R")
x<-c(1,2,3,4,5)
y<-c(2,3,4,5,6)
xlable<-c("ручка","книга","часы","ложка","смотреть")
plot(x,y,xlab=xlable)
dev.off()
pdf("sample.pdf",width = 6.6 ,height = 4.2,family= "URWHelvetica",  encoding="KOI8-R")
x<-c(1,2,3,4,5)
y<-c(2,3,4,5,6)
xlable<-c("ghkkk","книга","часы","ложка","смотреть")
plot(x,y,xlab=xlable)
dev.off()
x<-c(1,2,3,4,5)
y<-c(2,3,4,5,6)
xlable<-c("ghkkk","книга","часы","ложка","смотреть")
plot(x,y,xlab=xlable)
install.packages("Cairo")
library("cairo")
library("Cairo", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("Cairo")
cairo_pdf("sample.pdf",width = 6.6 ,height = 4.2,family= "URWHelvetica",  encoding="KOI8-R")
cairo_pdf("sample.pdf)
x<-c(1,2,3,4,5)
y<-c(2,3,4,5,6)
xlable<-c("ghkkk","книга","часы","ложка","смотреть")
plot(x,y,xlab=xlable)
library("Cairo")
cairo_pdf("sample.pdf")
x<-c(1,2,3,4,5)
y<-c(2,3,4,5,6)
xlable<-c("ghkkk", "книга")
plot(x,y,xlab=xlable)
dev.off()
library("ggplot2")
library("ggmap")
library("rgdal")
library("rgeos")
library("maptools")
library("dplyr")
library("tidyr")
library("tmap")
library("maps")
library("mapdata")
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
Volgograd <- readOGR("Карты/Россия/w_fd", "рос_фо_бк")
library("rgdal")
library("rgeos")
library("dplyr")
library("tidyr")
library("ggplot2")
library("ggmap")
library("maptools")
library("tmap")
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
Volgograd <- readOGR("Карты/Россия/w_fd", "рос_фо_бк")
rus_fd_nc <- readOGR("Карты/Россия/w_fd", "рос_фо_бк")
rus_fd_nc@data[, 1] <- c(1:length(rus_fd_nc@data$id))
rus_fd_nc@data
setwd("~/GitHub/rusmaps")
use_data(rus_fd_nc)
devtools::use_data(rus_fd_nc)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
rus_fd_nc <- readOGR("Карты/Россия/w_fd", "рос_фо")
rus_fd_nc@data[, 1] <- c(1:length(rus_fd_nc@data$id))
rus_fd_nc@data
setwd("~/GitHub/rusmaps")
devtools::use_data(rus_fd_nc)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
rus_fd <- readOGR("Карты/Россия/w_fd", "рос_фо")
rus_fd@data[, 1] <- c(1:length(rus_fd@data$id))
rus_fd@data
setwd("~/GitHub/rusmaps")
devtools::use_data(rus_fd)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
rus_sub <- readOGR("Карты/Россия/w_sub", "рос_суб")
rus_sub@data[, 1] <- c(1:length(rus_sub@data$id))
rus_sub@data
setwd("~/GitHub/rusmaps")
devtools::use_data(rus_sub)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
rus_sub_nc <- readOGR("Карты/Россия/w_sub", "рос_суб_бк")
rus_sub_nc@data[, 1] <- c(1:length(rus_sub_nc@data$id))
rus_sub_nc@data
setwd("~/GitHub/rusmaps")
devtools::use_data(rus_sub_nc)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
DFO <- readOGR("Карты/Федеральные_округа", "ДФО")
DFO@data[, 1] <- c(1:length(DFO@data$id))
DFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(DFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
KFO <- readOGR("Карты/Федеральные_округа", "КФО")
KFO@data[, 1] <- c(1:length(KFO@data$id))
KFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(KFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
VFO <- readOGR("Карты/Федеральные_округа", "ПФО")
VFO@data[, 1] <- c(1:length(VFO@data$id))
VFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(VFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
NWFO <- readOGR("Карты/Федеральные_округа", "СЗФО")
NWFO@data[, 1] <- c(1:length(NWFO@data$id))
NWFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(NWFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
NCFO <- readOGR("Карты/Федеральные_округа", "СКФО")
NCFO@data[, 1] <- c(1:length(NCFO@data$id))
NCFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(NCFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
SFO <- readOGR("Карты/Федеральные_округа", "СФО")
SFO@data[, 1] <- c(1:length(SFO@data$id))
SFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(SFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
UFO <- readOGR("Карты/Федеральные_округа", "УФО")
UFO@data[, 1] <- c(1:length(UFO@data$id))
UFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(UFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
СFO <- readOGR("Карты/Федеральные_округа", "ЦФО")
СFO@data[, 1] <- c(1:length(СFO@data$id))
СFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(СFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
SouthFO <- readOGR("Карты/Федеральные_округа", "ЮФО")
SouthFO@data[, 1] <- c(1:length(SouthFO@data$id))
SouthFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(SouthFO)
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
Khabarovsk <- readOGR("Карты/Хабаровский_край", "Хабаровск")
Khabarovsk@data[, 1] <- c(1:length(Khabarovsk@data$id))
Khabarovsk@data
setwd("~/GitHub/rusmaps")
devtools::use_data(Khabarovsk)
"Voronezh city districts",)
#############################
"Voronezh city districts",)
rusmaps.dataframe <- NULL
rusmaps.dataframe[, 1] <- map_name
map_name <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO", "NWFO", "NCFO", "SFO", "UFO", "CFO",
"SouthFO", "Khabarovsk")
description <- c("Cities of Russia with 1mil population",
"Voronezh city districts",
"Novgorod city districts",
"Novosibirsk city districts",
"Omsk city districts",
"Perm city districts",
"Rostov-na-Donu city districts",
"Samara city districts",
"Saint-Petersburg city districts",
"Ufa city districts",
"Chelyabinsk city districts",
"Moscow city districts",
"Krasnoyarsk city districts",
"Kazan city districts",
"Ekaterinburg city districts",
"Volgograd city districts",
"Federal Districts of Russia (without Crimea)",
"Federal Districts of Russia",
"Federal subjects of Russia",
"Federal subjects of Russia (without Crimea)",
"Regions in Far Eastern Federal District",
"Regions in Crimea Federal District",
"Regions in Volga Federal District",
"Regions in North-Waestern Federal District",
"Regions in North-Caucasus Federal District",
"Regions in Siberia Federal District",
"Regions in Ural Federal District",
"Regions in Central Federal District",
"Regions in Soutern Federal District",
"Municipal districts of Khabarovsk region")
rusmaps.dataframe[, 1] <- map_name
rusmaps.dataframe[, 1] <- as.vector(map_name)
rusmaps.dataframe[, 1] <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO", "NWFO", "NCFO", "SFO", "UFO", "CFO",
"SouthFO", "Khabarovsk")
rusmaps.dataframe <- as.data.frame(map_name, c("Map_name", "Date", "Format", "Description"))
rusmaps.dataframe <- data.frame(map_name, c("Map_name", "Date", "Format", "Description"))
rusmaps.dataframe <- data.frame(map_name, description)
rusmaps.dataframe
rusmaps.dataframe[, 3] <- "SpatialPolygonDataFrame"
rusmaps.dataframe[, 4] <- "27.06.2016"
names(rusmaps.dataframe)[3] <- "format"
names(rusmaps.dataframe)[4] <- "date"
rusmaps.dataframe
setwd("~/GitHub/rusmaps")
devtools::use_data(rusmaps.dataframe)
check()
devtools::check()
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
check()
check()
install_github("akondrashov96/rusmaps", ref="dev")
CFO
SouthFO
KFO
rusmaps.dataframe
CFO
DFO
VFO
SFO
KFO
NWFO
NCFO
rus_sub_nc
CFO
setwd("/Users/Artem/Documents/МИЭФ/курс 2/Курсовая/WORK")
CentralFO <- readOGR("Карты/Федеральные_округа", "ЦФО")
CentralFO@data[, 1] <- c(1:length(CentralFO@data$id))
CentralFO@data
setwd("~/GitHub/rusmaps")
devtools::use_data(CentralFO)
check()
install_github("akondrashov96/rusmaps", ref="dev")
library(rusmaps)
map_name <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO",
"NWFO", "NCFO", "SFO", "UFO", "CentralFO",
"SouthFO", "Khabarovsk")
rusmaps.dataframe <- data.frame(map_name, description)
rusmaps.dataframe
rusmaps.dataframe[, 4] <- "27.06.2016"
rusmaps.dataframe[, 3] <- "SpatialPolygonDataFrame"
names(rusmaps.dataframe)[3] <- "format"
names(rusmaps.dataframe)[4] <- "date"
setwd("~/GitHub/rusmaps")
devtools::use_data(rusmaps.dataframe)
rusmaps.dataframe
map_name <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO",
"NWFO", "NCFO", "SFO", "UFO", "CentralFO",
"SouthFO", "Khabarovsk")
rusmaps.dataframe <- data.frame(map_name, description)
map_name <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO",
"NWFO", "NCFO", "SFO", "UFO", "CentralFO",
"SouthFO", "Khabarovsk")
description <- c("Cities of Russia with 1mil population",
"Voronezh city districts",
"Novgorod city districts",
"Novosibirsk city districts",
"Omsk city districts",
"Perm city districts",
"Rostov-na-Donu city districts",
"Samara city districts",
"Saint-Petersburg city districts",
"Ufa city districts",
"Chelyabinsk city districts",
"Moscow city districts",
"Krasnoyarsk city districts",
"Kazan city districts",
"Ekaterinburg city districts",
"Volgograd city districts",
"Federal Districts of Russia (without Crimea)",
"Federal Districts of Russia",
"Federal subjects of Russia",
"Federal subjects of Russia (without Crimea)",
"Regions in Far Eastern Federal District",
"Regions in Crimea Federal District",
"Regions in Volga Federal District",
"Regions in North-Waestern Federal District",
"Regions in North-Caucasus Federal District",
"Regions in Siberia Federal District",
"Regions in Ural Federal District",
"Regions in Central Federal District",
"Regions in Soutern Federal District",
"Municipal districts of Khabarovsk region")
rusmaps.dataframe <- data.frame(map_name, description)
rusmaps.dataframe
rusmaps.dataframe[, 4] <- "27.06.2016"
rusmaps.dataframe[, 3] <- "SpatialPolygonDataFrame"
names(rusmaps.dataframe)[3] <- "format"
names(rusmaps.dataframe)[4] <- "date"
map_name <- c("cities", "Voronezh", "Novgorod", "Novosibirsk", "Omsk", "Perm", "Rostov", "Samara", "StPetersburg", "Ufa",
"Chelyabinsk", "Moscow", "Krasnoyarsk", "Kazan", "Ekaterinburg", "Volgograd",
"rus_fd_nc", "rus_fd", "rus_sub", "rus_sub_nc", "DFO", "KFO", "VFO",
"NWFO", "NCFO", "SFO", "UFO", "CentralFO",
"SouthFO", "Khabarovsk")
description <- c("Cities of Russia with 1mil population",
"Voronezh city districts",
"Novgorod city districts",
"Novosibirsk city districts",
"Omsk city districts",
"Perm city districts",
"Rostov-na-Donu city districts",
"Samara city districts",
"Saint-Petersburg city districts",
"Ufa city districts",
"Chelyabinsk city districts",
"Moscow city districts",
"Krasnoyarsk city districts",
"Kazan city districts",
"Ekaterinburg city districts",
"Volgograd city districts",
"Federal Districts of Russia (without Crimea)",
"Federal Districts of Russia",
"Federal subjects of Russia",
"Federal subjects of Russia (without Crimea)",
"Regions in Far Eastern Federal District",
"Regions in Crimea Federal District",
"Regions in Volga Federal District",
"Regions in North-Waestern Federal District",
"Regions in North-Caucasus Federal District",
"Regions in Siberia Federal District",
"Regions in Ural Federal District",
"Regions in Central Federal District",
"Regions in Soutern Federal District",
"Municipal districts of Khabarovsk region")
rusmaps.dataframe <- data.frame(map_name, description)
rusmaps.dataframe
rusmaps.dataframe[, 4] <- "27.06.2016"
rusmaps.dataframe[, 3] <- "SpatialPolygonDataFrame"
rusmaps.dataframe[, 4] <- "27.06.2016"
names(rusmaps.dataframe)[3] <- "format"
names(rusmaps.dataframe)[4] <- "date"
rusmaps.dataframe
setwd("~/GitHub/rusmaps")
devtools::use_data(rusmaps.dataframe)
use_travis()
plot(Moscow)
?Moscow
